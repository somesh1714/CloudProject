alib.scenariogeneration.ScenarioParameterContainer @ 0x1a5c3bcad60

 scenario_index_offset: 0

 scenario_list:
  [<alib.datamodel.Scenario object at 0x000001A5C3BCAD90>, <alib.datamodel.Scenario object at 0x000001A5C3BCAFA0>, <alib.datamodel.Scenario object at 0x000001A5C3BE2190>, <alib.datamodel.Scenario object at 0x000001A5C3BE2310>]
  alib.datamodel.Scenario @ 0x1a5c3bcad90
   name: scenario_0.0_rep_0
   objective: 0
   requests:
    [<alib.datamodel.Request object at 0x000001A5C3BCAE50>, <alib.datamodel.Request object at 0x000001A5C3BCAEB0>, <alib.datamodel.Request object at 0x000001A5C3BCAE20>, <alib.datamodel.Request object at 0x000001A5C3BCAE80>, <alib.datamodel.Request object at 0x000001A5C3BCAD00>]
    alib.datamodel.Request @ 0x1a5c3bcae50
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '1'):
       demand: 1.4186396875503968
       allowed_edges: None
      ('2', '3'):
       demand: 1.4186396875503968
       allowed_edges: None
      ('2', '1'):
       demand: 1.4186396875503968
       allowed_edges: None
     edges:
      {('2', '3'), ('3', '1'), ('2', '1')}
       ('2', '3')
       ('3', '1')
       ('2', '1')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1')]
        ('3', '1')
        ('2', '1')
      2:
       []
      3:
       [('2', '3')]
     in_neighbors:
      1:
       ['3', '2']
      2:
       []
      3:
       ['2']
     name: vnet_1
     node:
      1:
       demand: 18.44382446104537
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      2:
       demand: 18.44382446104537
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      3:
       demand: 18.44382446104537
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
     nodes:
      {'3', '1', '2'}
     out_edges:
      1:
       []
      2:
       [('2', '3'), ('2', '1')]
        ('2', '3')
        ('2', '1')
      3:
       [('3', '1')]
     out_neighbors:
      1:
       []
      2:
       ['3', '1']
      3:
       ['1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
    alib.datamodel.Request @ 0x1a5c3bcaeb0
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 6.49367986087015
       allowed_edges: None
      ('3', '1'):
       demand: 6.49367986087015
       allowed_edges: None
      ('2', '3'):
       demand: 6.49367986087015
       allowed_edges: None
      ('2', '1'):
       demand: 6.49367986087015
       allowed_edges: None
      ('1', '2'):
       demand: 6.49367986087015
       allowed_edges: None
     edges:
      {('2', '3'), ('2', '1'), ('3', '1'), ('3', '2'), ('1', '2')}
       ('2', '3')
       ('2', '1')
       ('3', '1')
       ('3', '2')
       ('1', '2')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1')]
        ('3', '1')
        ('2', '1')
      2:
       [('3', '2'), ('1', '2')]
        ('3', '2')
        ('1', '2')
      3:
       [('2', '3')]
     in_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2']
     name: vnet_2
     node:
      1:
       demand: 84.42474330245314
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      2:
       demand: 84.42474330245314
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      3:
       demand: 84.42474330245314
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
     nodes:
      {'3', '1', '2'}
     out_edges:
      1:
       [('1', '2')]
      2:
       [('2', '3'), ('2', '1')]
        ('2', '3')
        ('2', '1')
      3:
       [('3', '2'), ('3', '1')]
        ('3', '2')
        ('3', '1')
     out_neighbors:
      1:
       ['2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
    alib.datamodel.Request @ 0x1a5c3bcae20
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('3', '4'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('2', '3'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('2', '1'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('2', '4'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('1', '3'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('1', '2'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('1', '4'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('4', '3'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('4', '2'):
       demand: 3.8420228045113296
       allowed_edges: None
      ('4', '1'):
       demand: 3.8420228045113296
       allowed_edges: None
     edges:
      {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
       ('4', '2')
       ('2', '3')
       ('2', '4')
       ('2', '1')
       ('1', '3')
       ('3', '4')
       ('1', '4')
       ('3', '2')
       ('1', '2')
       ('4', '1')
       ('4', '3')
     graph:
       empty dict
     in_edges:
      1:
       [('2', '1'), ('4', '1')]
        ('2', '1')
        ('4', '1')
      2:
       [('3', '2'), ('1', '2'), ('4', '2')]
        ('3', '2')
        ('1', '2')
        ('4', '2')
      3:
       [('2', '3'), ('1', '3'), ('4', '3')]
        ('2', '3')
        ('1', '3')
        ('4', '3')
      4:
       [('3', '4'), ('2', '4'), ('1', '4')]
        ('3', '4')
        ('2', '4')
        ('1', '4')
     in_neighbors:
      1:
       ['2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     name: vnet_3
     node:
      1:
       demand: 49.950381907120345
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      2:
       demand: 49.950381907120345
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      3:
       demand: 49.950381907120345
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      4:
       demand: 49.950381907120345
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
     nodes:
      {'3', '1', '4', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2'), ('1', '4')]
        ('1', '3')
        ('1', '2')
        ('1', '4')
      2:
       [('2', '3'), ('2', '1'), ('2', '4')]
        ('2', '3')
        ('2', '1')
        ('2', '4')
      3:
       [('3', '2'), ('3', '4')]
        ('3', '2')
        ('3', '4')
      4:
       [('4', '3'), ('4', '2'), ('4', '1')]
        ('4', '3')
        ('4', '2')
        ('4', '1')
     out_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '4']
      4:
       ['3', '2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
    alib.datamodel.Request @ 0x1a5c3bcae80
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('3', '1'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('3', '4'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('2', '3'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('2', '1'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('2', '4'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('1', '3'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('1', '2'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('1', '4'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('4', '3'):
       demand: 2.1237595979620876
       allowed_edges: None
      ('4', '2'):
       demand: 2.1237595979620876
       allowed_edges: None
     edges:
      {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '3')}
       ('4', '2')
       ('2', '3')
       ('2', '4')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '4')
       ('1', '4')
       ('3', '2')
       ('1', '2')
       ('4', '3')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1')]
        ('3', '1')
        ('2', '1')
      2:
       [('3', '2'), ('1', '2'), ('4', '2')]
        ('3', '2')
        ('1', '2')
        ('4', '2')
      3:
       [('2', '3'), ('1', '3'), ('4', '3')]
        ('2', '3')
        ('1', '3')
        ('4', '3')
      4:
       [('3', '4'), ('2', '4'), ('1', '4')]
        ('3', '4')
        ('2', '4')
        ('1', '4')
     in_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     name: vnet_4
     node:
      1:
       demand: 27.611133091806664
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      2:
       demand: 27.611133091806664
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      3:
       demand: 27.611133091806664
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      4:
       demand: 27.611133091806664
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
     nodes:
      {'3', '1', '4', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2'), ('1', '4')]
        ('1', '3')
        ('1', '2')
        ('1', '4')
      2:
       [('2', '3'), ('2', '1'), ('2', '4')]
        ('2', '3')
        ('2', '1')
        ('2', '4')
      3:
       [('3', '2'), ('3', '1'), ('3', '4')]
        ('3', '2')
        ('3', '1')
        ('3', '4')
      4:
       [('4', '3'), ('4', '2')]
        ('4', '3')
        ('4', '2')
     out_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
    alib.datamodel.Request @ 0x1a5c3bcad00
     _shortest_paths_attribute_identifier: cost
     edge:
      ('2', '1'):
       demand: 2.159370936228571
       allowed_edges: None
      ('1', '2'):
       demand: 2.159370936228571
       allowed_edges: None
     edges:
      {('1', '2'), ('2', '1')}
       ('1', '2')
       ('2', '1')
     graph:
       empty dict
     in_edges:
      1:
       [('2', '1')]
      2:
       [('1', '2')]
     in_neighbors:
      1:
       ['2']
      2:
       ['1']
     name: vnet_5
     node:
      1:
       demand: 28.07411835689823
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
      2:
       demand: 28.07411835689823
       allowed_nodes:
        ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
       type: t1
     nodes:
      {'1', '2'}
     out_edges:
      1:
       [('1', '2')]
      2:
       [('2', '1')]
     out_neighbors:
      1:
       ['2']
      2:
       ['1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
   substrate: Substrate VtlWavenet2011 with following attributes: 
		Nodes{'9', '23', '19', '62', '42', '31', '85', '84', '30', '80', '82', '71', '12', '66', '4', '48', '68', '86', '64', '24', '28', '43', '22', '6', '37', '13', '44', '32', '73', '89', '57', '26', '50', '18', '17', '63', '5', '70', '75', '3', '27', '65', '51', '11', '16', '79', '90', '72', '1', '76', '61', '88', '0', '39', '49', '45', '54', '78', '46', '58', '29', '25', '15', '8', '67', '33', '2', '83', '55', '10', '87', '36', '14', '47', '69', '38', '7', '60', '74', '21', '56', '52', '53', '59', '91', '81', '77', '20', '35', '34', '41', '40'}
		Edges{('20', '23'), ('71', '70'), ('87', '63'), ('91', '37'), ('48', '47'), ('39', '38'), ('47', '26'), ('53', '52'), ('3', '4'), ('62', '65'), ('11', '10'), ('36', '55'), ('74', '75'), ('31', '30'), ('20', '21'), ('47', '27'), ('40', '79'), ('18', '33'), ('49', '81'), ('24', '28'), ('78', '2'), ('8', '11'), ('7', '11'), ('46', '40'), ('22', '83'), ('82', '35'), ('34', '33'), ('35', '82'), ('77', '50'), ('71', '68'), ('17', '61'), ('16', '64'), ('37', '91'), ('56', '57'), ('5', '6'), ('69', '66'), ('38', '90'), ('11', '7'), ('40', '46'), ('91', '36'), ('3', '2'), ('27', '47'), ('72', '54'), ('6', '5'), ('11', '8'), ('83', '35'), ('13', '77'), ('57', '54'), ('29', '51'), ('33', '34'), ('85', '84'), ('18', '30'), ('44', '75'), ('65', '12'), ('8', '9'), ('64', '16'), ('76', '44'), ('66', '67'), ('28', '24'), ('21', '46'), ('35', '83'), ('5', '4'), ('73', '72'), ('80', '81'), ('73', '46'), ('22', '23'), ('14', '52'), ('42', '49'), ('7', '6'), ('13', '29'), ('25', '24'), ('60', '17'), ('30', '18'), ('51', '28'), ('30', '31'), ('31', '19'), ('15', '51'), ('51', '15'), ('68', '69'), ('39', '37'), ('23', '22'), ('79', '26'), ('77', '13'), ('4', '3'), ('26', '47'), ('76', '45'), ('0', '32'), ('61', '17'), ('67', '16'), ('79', '40'), ('10', '11'), ('23', '20'), ('87', '88'), ('12', '65'), ('70', '14'), ('38', '39'), ('58', '59'), ('60', '53'), ('25', '15'), ('46', '73'), ('2', '78'), ('63', '86'), ('51', '29'), ('32', '0'), ('89', '90'), ('9', '8'), ('48', '80'), ('66', '69'), ('55', '36'), ('58', '61'), ('54', '57'), ('64', '12'), ('90', '89'), ('2', '3'), ('24', '27'), ('34', '55'), ('44', '76'), ('36', '82'), ('1', '32'), ('42', '43'), ('14', '70'), ('45', '76'), ('80', '48'), ('59', '58'), ('41', '9'), ('43', '74'), ('86', '63'), ('41', '0'), ('47', '48'), ('89', '88'), ('0', '41'), ('81', '80'), ('46', '78'), ('17', '60'), ('82', '36'), ('16', '67'), ('50', '45'), ('10', '62'), ('9', '41'), ('63', '87'), ('70', '71'), ('69', '68'), ('46', '21'), ('6', '7'), ('56', '59'), ('68', '71'), ('75', '74'), ('65', '62'), ('29', '13'), ('1', '33'), ('33', '18'), ('86', '84'), ('52', '53'), ('55', '34'), ('4', '5'), ('74', '43'), ('49', '42'), ('57', '56'), ('54', '72'), ('62', '10'), ('81', '49'), ('43', '42'), ('61', '58'), ('53', '60'), ('59', '56'), ('88', '89'), ('88', '87'), ('50', '77'), ('75', '44'), ('32', '1'), ('33', '1'), ('83', '22'), ('45', '50'), ('52', '14'), ('72', '73'), ('27', '24'), ('24', '25'), ('15', '25'), ('90', '38'), ('84', '86'), ('84', '85'), ('28', '51'), ('12', '64'), ('37', '39'), ('78', '46'), ('45', '85'), ('36', '91'), ('21', '20'), ('19', '31'), ('67', '66'), ('85', '45'), ('26', '79')}
  alib.datamodel.Scenario @ 0x1a5c3bcafa0
   name: scenario_1.0_rep_0
   objective: 0
   requests:
    [<alib.datamodel.Request object at 0x000001A5C3BCAF70>, <alib.datamodel.Request object at 0x000001A5C3BCAEE0>, <alib.datamodel.Request object at 0x000001A5C3BCAF10>, <alib.datamodel.Request object at 0x000001A5C3BCAFD0>, <alib.datamodel.Request object at 0x000001A5C3BE2100>]
    alib.datamodel.Request @ 0x1a5c3bcaf70
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('3', '1'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('3', '4'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('2', '3'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('2', '1'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('2', '4'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('1', '3'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('1', '2'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('1', '4'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('4', '3'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('4', '2'):
       demand: 0.21881311318592794
       allowed_edges: None
      ('4', '1'):
       demand: 0.21881311318592794
       allowed_edges: None
     edges:
      {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
       ('4', '2')
       ('2', '3')
       ('2', '4')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '4')
       ('1', '4')
       ('3', '2')
       ('1', '2')
       ('4', '1')
       ('4', '3')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1'), ('4', '1')]
        ('3', '1')
        ('2', '1')
        ('4', '1')
      2:
       [('3', '2'), ('1', '2'), ('4', '2')]
        ('3', '2')
        ('1', '2')
        ('4', '2')
      3:
       [('2', '3'), ('1', '3'), ('4', '3')]
        ('2', '3')
        ('1', '3')
        ('4', '3')
      4:
       [('3', '4'), ('2', '4'), ('1', '4')]
        ('3', '4')
        ('2', '4')
        ('1', '4')
     in_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     name: vnet_1
     node:
      1:
       demand: 2.8702614205111905
       allowed_nodes:
        ['6', '4']
       type: t1
      2:
       demand: 2.8702614205111905
       allowed_nodes:
        ['6', '4']
       type: t1
      3:
       demand: 2.8702614205111905
       allowed_nodes:
        ['6', '4']
       type: t1
      4:
       demand: 2.8702614205111905
       allowed_nodes:
        ['6', '4']
       type: t1
     nodes:
      {'3', '1', '4', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2'), ('1', '4')]
        ('1', '3')
        ('1', '2')
        ('1', '4')
      2:
       [('2', '3'), ('2', '1'), ('2', '4')]
        ('2', '3')
        ('2', '1')
        ('2', '4')
      3:
       [('3', '2'), ('3', '1'), ('3', '4')]
        ('3', '2')
        ('3', '1')
        ('3', '4')
      4:
       [('4', '3'), ('4', '2'), ('4', '1')]
        ('4', '3')
        ('4', '2')
        ('4', '1')
     out_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
    alib.datamodel.Request @ 0x1a5c3bcaee0
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '1'):
       demand: 0.42893818438379866
       allowed_edges: None
      ('2', '3'):
       demand: 0.42893818438379866
       allowed_edges: None
      ('2', '1'):
       demand: 0.42893818438379866
       allowed_edges: None
      ('1', '2'):
       demand: 0.42893818438379866
       allowed_edges: None
     edges:
      {('2', '3'), ('1', '2'), ('3', '1'), ('2', '1')}
       ('2', '3')
       ('1', '2')
       ('3', '1')
       ('2', '1')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1')]
        ('3', '1')
        ('2', '1')
      2:
       [('1', '2')]
      3:
       [('2', '3')]
     in_neighbors:
      1:
       ['3', '2']
      2:
       ['1']
      3:
       ['2']
     name: vnet_2
     node:
      1:
       demand: 5.626558228138723
       allowed_nodes:
        ['6', '4']
       type: t1
      2:
       demand: 5.626558228138723
       allowed_nodes:
        ['6', '4']
       type: t1
      3:
       demand: 5.626558228138723
       allowed_nodes:
        ['6', '4']
       type: t1
     nodes:
      {'3', '1', '2'}
     out_edges:
      1:
       [('1', '2')]
      2:
       [('2', '3'), ('2', '1')]
        ('2', '3')
        ('2', '1')
      3:
       [('3', '1')]
     out_neighbors:
      1:
       ['2']
      2:
       ['3', '1']
      3:
       ['1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
    alib.datamodel.Request @ 0x1a5c3bcaf10
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('3', '1'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('3', '4'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('2', '3'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('2', '1'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('2', '4'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('1', '3'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('1', '2'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('1', '4'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('4', '3'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('4', '2'):
       demand: 0.2820828279334438
       allowed_edges: None
      ('4', '1'):
       demand: 0.2820828279334438
       allowed_edges: None
     edges:
      {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
       ('4', '2')
       ('2', '3')
       ('2', '4')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '4')
       ('1', '4')
       ('3', '2')
       ('1', '2')
       ('4', '1')
       ('4', '3')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1'), ('4', '1')]
        ('3', '1')
        ('2', '1')
        ('4', '1')
      2:
       [('3', '2'), ('1', '2'), ('4', '2')]
        ('3', '2')
        ('1', '2')
        ('4', '2')
      3:
       [('2', '3'), ('1', '3'), ('4', '3')]
        ('2', '3')
        ('1', '3')
        ('4', '3')
      4:
       [('3', '4'), ('2', '4'), ('1', '4')]
        ('3', '4')
        ('2', '4')
        ('1', '4')
     in_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     name: vnet_3
     node:
      1:
       demand: 3.700196238778844
       allowed_nodes:
        ['6', '4']
       type: t1
      2:
       demand: 3.700196238778844
       allowed_nodes:
        ['6', '4']
       type: t1
      3:
       demand: 3.700196238778844
       allowed_nodes:
        ['6', '4']
       type: t1
      4:
       demand: 3.700196238778844
       allowed_nodes:
        ['6', '4']
       type: t1
     nodes:
      {'3', '1', '4', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2'), ('1', '4')]
        ('1', '3')
        ('1', '2')
        ('1', '4')
      2:
       [('2', '3'), ('2', '1'), ('2', '4')]
        ('2', '3')
        ('2', '1')
        ('2', '4')
      3:
       [('3', '2'), ('3', '1'), ('3', '4')]
        ('3', '2')
        ('3', '1')
        ('3', '4')
      4:
       [('4', '3'), ('4', '2'), ('4', '1')]
        ('4', '3')
        ('4', '2')
        ('4', '1')
     out_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
    alib.datamodel.Request @ 0x1a5c3bcafd0
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('3', '1'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('3', '4'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('2', '3'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('2', '4'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('1', '3'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('1', '2'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('1', '4'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('4', '3'):
       demand: 0.05986280393127171
       allowed_edges: None
      ('4', '1'):
       demand: 0.05986280393127171
       allowed_edges: None
     edges:
      {('2', '3'), ('2', '4'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
       ('2', '3')
       ('2', '4')
       ('3', '1')
       ('1', '3')
       ('3', '4')
       ('1', '4')
       ('3', '2')
       ('1', '2')
       ('4', '1')
       ('4', '3')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('4', '1')]
        ('3', '1')
        ('4', '1')
      2:
       [('3', '2'), ('1', '2')]
        ('3', '2')
        ('1', '2')
      3:
       [('2', '3'), ('1', '3'), ('4', '3')]
        ('2', '3')
        ('1', '3')
        ('4', '3')
      4:
       [('3', '4'), ('2', '4'), ('1', '4')]
        ('3', '4')
        ('2', '4')
        ('1', '4')
     in_neighbors:
      1:
       ['3', '4']
      2:
       ['3', '1']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     name: vnet_4
     node:
      1:
       demand: 0.7852449706775838
       allowed_nodes:
        ['6', '4']
       type: t1
      2:
       demand: 0.7852449706775838
       allowed_nodes:
        ['6', '4']
       type: t1
      3:
       demand: 0.7852449706775838
       allowed_nodes:
        ['6', '4']
       type: t1
      4:
       demand: 0.7852449706775838
       allowed_nodes:
        ['6', '4']
       type: t1
     nodes:
      {'3', '1', '4', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2'), ('1', '4')]
        ('1', '3')
        ('1', '2')
        ('1', '4')
      2:
       [('2', '3'), ('2', '4')]
        ('2', '3')
        ('2', '4')
      3:
       [('3', '2'), ('3', '1'), ('3', '4')]
        ('3', '2')
        ('3', '1')
        ('3', '4')
      4:
       [('4', '3'), ('4', '1')]
        ('4', '3')
        ('4', '1')
     out_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
    alib.datamodel.Request @ 0x1a5c3be2100
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 0.09395946976808581
       allowed_edges: None
      ('3', '1'):
       demand: 0.09395946976808581
       allowed_edges: None
      ('2', '3'):
       demand: 0.09395946976808581
       allowed_edges: None
      ('2', '1'):
       demand: 0.09395946976808581
       allowed_edges: None
      ('1', '3'):
       demand: 0.09395946976808581
       allowed_edges: None
      ('1', '2'):
       demand: 0.09395946976808581
       allowed_edges: None
     edges:
      {('2', '3'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
       ('2', '3')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '2')
       ('1', '2')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1')]
        ('3', '1')
        ('2', '1')
      2:
       [('3', '2'), ('1', '2')]
        ('3', '2')
        ('1', '2')
      3:
       [('2', '3'), ('1', '3')]
        ('2', '3')
        ('1', '3')
     in_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     name: vnet_5
     node:
      1:
       demand: 1.2325049319044563
       allowed_nodes:
        ['6', '4']
       type: t1
      2:
       demand: 1.2325049319044563
       allowed_nodes:
        ['6', '4']
       type: t1
      3:
       demand: 1.2325049319044563
       allowed_nodes:
        ['6', '4']
       type: t1
     nodes:
      {'3', '1', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2')]
        ('1', '3')
        ('1', '2')
      2:
       [('2', '3'), ('2', '1')]
        ('2', '3')
        ('2', '1')
      3:
       [('3', '2'), ('3', '1')]
        ('3', '2')
        ('3', '1')
     out_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t1'}
   substrate: Substrate KK_Aarnet with following attributes: 
		Nodes{'6', '3', '5', '0', '2', '4', '1'}
		Edges{('0', '2'), ('4', '2'), ('0', '1'), ('5', '4'), ('1', '0'), ('0', '3'), ('2', '4'), ('3', '1'), ('1', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('2', '0'), ('3', '0'), ('4', '3'), ('6', '5')}
  alib.datamodel.Scenario @ 0x1a5c3be2190
   name: scenario_2.0_rep_0
   objective: 0
   requests:
    [<alib.datamodel.Request object at 0x000001A5C3BE21C0>, <alib.datamodel.Request object at 0x000001A5C3BE21F0>, <alib.datamodel.Request object at 0x000001A5C3BE2220>, <alib.datamodel.Request object at 0x000001A5C3BE2250>, <alib.datamodel.Request object at 0x000001A5C3BE2280>]
    alib.datamodel.Request @ 0x1a5c3be21c0
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 2.6190688096634216
       allowed_edges: None
      ('3', '1'):
       demand: 2.6190688096634216
       allowed_edges: None
      ('2', '3'):
       demand: 2.6190688096634216
       allowed_edges: None
      ('2', '1'):
       demand: 2.6190688096634216
       allowed_edges: None
      ('1', '3'):
       demand: 2.6190688096634216
       allowed_edges: None
      ('1', '2'):
       demand: 2.6190688096634216
       allowed_edges: None
     edges:
      {('2', '3'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
       ('2', '3')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '2')
       ('1', '2')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1')]
        ('3', '1')
        ('2', '1')
      2:
       [('3', '2'), ('1', '2')]
        ('3', '2')
        ('1', '2')
      3:
       [('2', '3'), ('1', '3')]
        ('2', '3')
        ('1', '3')
     in_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     name: vnet_1
     node:
      1:
       demand: 39.39052265846829
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      2:
       demand: 39.39052265846829
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      3:
       demand: 39.39052265846829
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
     nodes:
      {'3', '1', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2')]
        ('1', '3')
        ('1', '2')
      2:
       [('2', '3'), ('2', '1')]
        ('2', '3')
        ('2', '1')
      3:
       [('3', '2'), ('3', '1')]
        ('3', '2')
        ('3', '1')
     out_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
    alib.datamodel.Request @ 0x1a5c3be21f0
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 4.665177102133816
       allowed_edges: None
      ('3', '1'):
       demand: 4.665177102133816
       allowed_edges: None
      ('3', '4'):
       demand: 4.665177102133816
       allowed_edges: None
      ('2', '3'):
       demand: 4.665177102133816
       allowed_edges: None
      ('2', '1'):
       demand: 4.665177102133816
       allowed_edges: None
      ('2', '4'):
       demand: 4.665177102133816
       allowed_edges: None
      ('1', '3'):
       demand: 4.665177102133816
       allowed_edges: None
      ('1', '2'):
       demand: 4.665177102133816
       allowed_edges: None
      ('1', '4'):
       demand: 4.665177102133816
       allowed_edges: None
      ('4', '3'):
       demand: 4.665177102133816
       allowed_edges: None
      ('4', '2'):
       demand: 4.665177102133816
       allowed_edges: None
      ('4', '1'):
       demand: 4.665177102133816
       allowed_edges: None
     edges:
      {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
       ('4', '2')
       ('2', '3')
       ('2', '4')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '4')
       ('1', '4')
       ('3', '2')
       ('1', '2')
       ('4', '1')
       ('4', '3')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1'), ('4', '1')]
        ('3', '1')
        ('2', '1')
        ('4', '1')
      2:
       [('3', '2'), ('1', '2'), ('4', '2')]
        ('3', '2')
        ('1', '2')
        ('4', '2')
      3:
       [('2', '3'), ('1', '3'), ('4', '3')]
        ('2', '3')
        ('1', '3')
        ('4', '3')
      4:
       [('3', '4'), ('2', '4'), ('1', '4')]
        ('3', '4')
        ('2', '4')
        ('1', '4')
     in_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     name: vnet_2
     node:
      1:
       demand: 70.16377869468239
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      2:
       demand: 70.16377869468239
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      3:
       demand: 70.16377869468239
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      4:
       demand: 70.16377869468239
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
     nodes:
      {'3', '1', '4', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2'), ('1', '4')]
        ('1', '3')
        ('1', '2')
        ('1', '4')
      2:
       [('2', '3'), ('2', '1'), ('2', '4')]
        ('2', '3')
        ('2', '1')
        ('2', '4')
      3:
       [('3', '2'), ('3', '1'), ('3', '4')]
        ('3', '2')
        ('3', '1')
        ('3', '4')
      4:
       [('4', '3'), ('4', '2'), ('4', '1')]
        ('4', '3')
        ('4', '2')
        ('4', '1')
     out_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
    alib.datamodel.Request @ 0x1a5c3be2220
     _shortest_paths_attribute_identifier: cost
     edge:
      ('2', '1'):
       demand: 3.960785620890775
       allowed_edges: None
     edges:
      {('2', '1')}
       ('2', '1')
     graph:
       empty dict
     in_edges:
      1:
       [('2', '1')]
      2:
       []
     in_neighbors:
      1:
       ['2']
      2:
       []
     name: vnet_3
     node:
      1:
       demand: 59.5698040346956
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      2:
       demand: 59.5698040346956
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
     nodes:
      {'1', '2'}
     out_edges:
      1:
       []
      2:
       [('2', '1')]
     out_neighbors:
      1:
       []
      2:
       ['1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
    alib.datamodel.Request @ 0x1a5c3be2250
     _shortest_paths_attribute_identifier: cost
     edge:
      ('2', '1'):
       demand: 0.07852169696064547
       allowed_edges: None
      ('1', '2'):
       demand: 0.07852169696064547
       allowed_edges: None
     edges:
      {('1', '2'), ('2', '1')}
       ('1', '2')
       ('2', '1')
     graph:
       empty dict
     in_edges:
      1:
       [('2', '1')]
      2:
       [('1', '2')]
     in_neighbors:
      1:
       ['2']
      2:
       ['1']
     name: vnet_4
     node:
      1:
       demand: 1.1809581603574486
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      2:
       demand: 1.1809581603574486
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
     nodes:
      {'1', '2'}
     out_edges:
      1:
       [('1', '2')]
      2:
       [('2', '1')]
     out_neighbors:
      1:
       ['2']
      2:
       ['1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
    alib.datamodel.Request @ 0x1a5c3be2280
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('3', '1'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('3', '4'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('2', '3'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('2', '1'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('2', '4'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('1', '3'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('1', '2'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('1', '4'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('4', '3'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('4', '2'):
       demand: 2.5710249640223566
       allowed_edges: None
      ('4', '1'):
       demand: 2.5710249640223566
       allowed_edges: None
     edges:
      {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
       ('4', '2')
       ('2', '3')
       ('2', '4')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '4')
       ('1', '4')
       ('3', '2')
       ('1', '2')
       ('4', '1')
       ('4', '3')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1'), ('4', '1')]
        ('3', '1')
        ('2', '1')
        ('4', '1')
      2:
       [('3', '2'), ('1', '2'), ('4', '2')]
        ('3', '2')
        ('1', '2')
        ('4', '2')
      3:
       [('2', '3'), ('1', '3'), ('4', '3')]
        ('2', '3')
        ('1', '3')
        ('4', '3')
      4:
       [('3', '4'), ('2', '4'), ('1', '4')]
        ('3', '4')
        ('2', '4')
        ('1', '4')
     in_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     name: vnet_5
     node:
      1:
       demand: 38.66794821393986
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      2:
       demand: 38.66794821393986
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      3:
       demand: 38.66794821393986
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
      4:
       demand: 38.66794821393986
       allowed_nodes:
        ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
       type: t2
     nodes:
      {'3', '1', '4', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2'), ('1', '4')]
        ('1', '3')
        ('1', '2')
        ('1', '4')
      2:
       [('2', '3'), ('2', '1'), ('2', '4')]
        ('2', '3')
        ('2', '1')
        ('2', '4')
      3:
       [('3', '2'), ('3', '1'), ('3', '4')]
        ('3', '2')
        ('3', '1')
        ('3', '4')
      4:
       [('4', '3'), ('4', '2'), ('4', '1')]
        ('4', '3')
        ('4', '2')
        ('4', '1')
     out_neighbors:
      1:
       ['3', '2', '4']
      2:
       ['3', '1', '4']
      3:
       ['2', '1', '4']
      4:
       ['3', '2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
   substrate: Substrate VtlWavenet2011 with following attributes: 
		Nodes{'9', '23', '19', '62', '42', '31', '85', '84', '30', '80', '82', '71', '12', '66', '4', '48', '68', '86', '64', '24', '28', '43', '22', '6', '37', '13', '44', '32', '73', '89', '57', '26', '50', '18', '17', '63', '5', '70', '75', '3', '27', '65', '51', '11', '16', '79', '90', '72', '1', '76', '61', '88', '0', '39', '49', '45', '54', '78', '46', '58', '29', '25', '15', '8', '67', '33', '2', '83', '55', '10', '87', '36', '14', '47', '69', '38', '7', '60', '74', '21', '56', '52', '53', '59', '91', '81', '77', '20', '35', '34', '41', '40'}
		Edges{('20', '23'), ('71', '70'), ('87', '63'), ('91', '37'), ('48', '47'), ('39', '38'), ('47', '26'), ('53', '52'), ('3', '4'), ('62', '65'), ('11', '10'), ('36', '55'), ('74', '75'), ('31', '30'), ('20', '21'), ('47', '27'), ('40', '79'), ('18', '33'), ('49', '81'), ('24', '28'), ('78', '2'), ('8', '11'), ('7', '11'), ('46', '40'), ('22', '83'), ('82', '35'), ('34', '33'), ('35', '82'), ('77', '50'), ('71', '68'), ('17', '61'), ('16', '64'), ('37', '91'), ('56', '57'), ('5', '6'), ('69', '66'), ('38', '90'), ('11', '7'), ('40', '46'), ('91', '36'), ('3', '2'), ('27', '47'), ('72', '54'), ('6', '5'), ('11', '8'), ('83', '35'), ('13', '77'), ('57', '54'), ('29', '51'), ('33', '34'), ('85', '84'), ('18', '30'), ('44', '75'), ('65', '12'), ('8', '9'), ('64', '16'), ('76', '44'), ('66', '67'), ('28', '24'), ('21', '46'), ('35', '83'), ('5', '4'), ('73', '72'), ('80', '81'), ('73', '46'), ('22', '23'), ('14', '52'), ('42', '49'), ('7', '6'), ('13', '29'), ('25', '24'), ('60', '17'), ('30', '18'), ('51', '28'), ('30', '31'), ('31', '19'), ('15', '51'), ('51', '15'), ('68', '69'), ('39', '37'), ('23', '22'), ('79', '26'), ('77', '13'), ('4', '3'), ('26', '47'), ('76', '45'), ('0', '32'), ('61', '17'), ('67', '16'), ('79', '40'), ('10', '11'), ('23', '20'), ('87', '88'), ('12', '65'), ('70', '14'), ('38', '39'), ('58', '59'), ('60', '53'), ('25', '15'), ('46', '73'), ('2', '78'), ('63', '86'), ('51', '29'), ('32', '0'), ('89', '90'), ('9', '8'), ('48', '80'), ('66', '69'), ('55', '36'), ('58', '61'), ('54', '57'), ('64', '12'), ('90', '89'), ('2', '3'), ('24', '27'), ('34', '55'), ('44', '76'), ('36', '82'), ('1', '32'), ('42', '43'), ('14', '70'), ('45', '76'), ('80', '48'), ('59', '58'), ('41', '9'), ('43', '74'), ('86', '63'), ('41', '0'), ('47', '48'), ('89', '88'), ('0', '41'), ('81', '80'), ('46', '78'), ('17', '60'), ('82', '36'), ('16', '67'), ('50', '45'), ('10', '62'), ('9', '41'), ('63', '87'), ('70', '71'), ('69', '68'), ('46', '21'), ('6', '7'), ('56', '59'), ('68', '71'), ('75', '74'), ('65', '62'), ('29', '13'), ('1', '33'), ('33', '18'), ('86', '84'), ('52', '53'), ('55', '34'), ('4', '5'), ('74', '43'), ('49', '42'), ('57', '56'), ('54', '72'), ('62', '10'), ('81', '49'), ('43', '42'), ('61', '58'), ('53', '60'), ('59', '56'), ('88', '89'), ('88', '87'), ('50', '77'), ('75', '44'), ('32', '1'), ('33', '1'), ('83', '22'), ('45', '50'), ('52', '14'), ('72', '73'), ('27', '24'), ('24', '25'), ('15', '25'), ('90', '38'), ('84', '86'), ('84', '85'), ('28', '51'), ('12', '64'), ('37', '39'), ('78', '46'), ('45', '85'), ('36', '91'), ('21', '20'), ('19', '31'), ('67', '66'), ('85', '45'), ('26', '79')}
  alib.datamodel.Scenario @ 0x1a5c3be2310
   name: scenario_3.0_rep_0
   objective: 0
   requests:
    [<alib.datamodel.Request object at 0x000001A5C3BE2340>, <alib.datamodel.Request object at 0x000001A5C3BE2370>, <alib.datamodel.Request object at 0x000001A5C3BE23A0>, <alib.datamodel.Request object at 0x000001A5C3BE23D0>, <alib.datamodel.Request object at 0x000001A5C3BE2400>]
    alib.datamodel.Request @ 0x1a5c3be2340
     _shortest_paths_attribute_identifier: cost
     edge:
      ('2', '1'):
       demand: 0.37839081362352417
       allowed_edges: None
     edges:
      {('2', '1')}
       ('2', '1')
     graph:
       empty dict
     in_edges:
      1:
       [('2', '1')]
      2:
       []
     in_neighbors:
      1:
       ['2']
      2:
       []
     name: vnet_1
     node:
      1:
       demand: 3.4747674971009084
       allowed_nodes:
        ['6', '1']
       type: t2
      2:
       demand: 3.4747674971009084
       allowed_nodes:
        ['6', '1']
       type: t2
     nodes:
      {'1', '2'}
     out_edges:
      1:
       []
      2:
       [('2', '1')]
     out_neighbors:
      1:
       []
      2:
       ['1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
    alib.datamodel.Request @ 0x1a5c3be2370
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 0.031035719454252687
       allowed_edges: None
      ('2', '3'):
       demand: 0.031035719454252687
       allowed_edges: None
      ('2', '1'):
       demand: 0.031035719454252687
       allowed_edges: None
      ('1', '3'):
       demand: 0.031035719454252687
       allowed_edges: None
      ('1', '2'):
       demand: 0.031035719454252687
       allowed_edges: None
     edges:
      {('2', '3'), ('2', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
       ('2', '3')
       ('2', '1')
       ('1', '3')
       ('3', '2')
       ('1', '2')
     graph:
       empty dict
     in_edges:
      1:
       [('2', '1')]
      2:
       [('3', '2'), ('1', '2')]
        ('3', '2')
        ('1', '2')
      3:
       [('2', '3'), ('1', '3')]
        ('2', '3')
        ('1', '3')
     in_neighbors:
      1:
       ['2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     name: vnet_2
     node:
      1:
       demand: 0.2850013936016843
       allowed_nodes:
        ['6', '1']
       type: t2
      2:
       demand: 0.2850013936016843
       allowed_nodes:
        ['6', '1']
       type: t2
      3:
       demand: 0.2850013936016843
       allowed_nodes:
        ['6', '1']
       type: t2
     nodes:
      {'3', '1', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2')]
        ('1', '3')
        ('1', '2')
      2:
       [('2', '3'), ('2', '1')]
        ('2', '3')
        ('2', '1')
      3:
       [('3', '2')]
     out_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
    alib.datamodel.Request @ 0x1a5c3be23a0
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 0.18222578953047358
       allowed_edges: None
      ('3', '1'):
       demand: 0.18222578953047358
       allowed_edges: None
      ('2', '3'):
       demand: 0.18222578953047358
       allowed_edges: None
      ('2', '1'):
       demand: 0.18222578953047358
       allowed_edges: None
      ('1', '3'):
       demand: 0.18222578953047358
       allowed_edges: None
      ('1', '2'):
       demand: 0.18222578953047358
       allowed_edges: None
     edges:
      {('2', '3'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
       ('2', '3')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '2')
       ('1', '2')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1')]
        ('3', '1')
        ('2', '1')
      2:
       [('3', '2'), ('1', '2')]
        ('3', '2')
        ('1', '2')
      3:
       [('2', '3'), ('1', '3')]
        ('2', '3')
        ('1', '3')
     in_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     name: vnet_3
     node:
      1:
       demand: 1.6733816673045039
       allowed_nodes:
        ['6', '1']
       type: t2
      2:
       demand: 1.6733816673045039
       allowed_nodes:
        ['6', '1']
       type: t2
      3:
       demand: 1.6733816673045039
       allowed_nodes:
        ['6', '1']
       type: t2
     nodes:
      {'3', '1', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2')]
        ('1', '3')
        ('1', '2')
      2:
       [('2', '3'), ('2', '1')]
        ('2', '3')
        ('2', '1')
      3:
       [('3', '2'), ('3', '1')]
        ('3', '2')
        ('3', '1')
     out_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
    alib.datamodel.Request @ 0x1a5c3be23d0
     _shortest_paths_attribute_identifier: cost
     edge:
      ('3', '2'):
       demand: 1.0712314857300056
       allowed_edges: None
      ('3', '1'):
       demand: 1.0712314857300056
       allowed_edges: None
      ('2', '3'):
       demand: 1.0712314857300056
       allowed_edges: None
      ('2', '1'):
       demand: 1.0712314857300056
       allowed_edges: None
      ('1', '3'):
       demand: 1.0712314857300056
       allowed_edges: None
      ('1', '2'):
       demand: 1.0712314857300056
       allowed_edges: None
     edges:
      {('2', '3'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
       ('2', '3')
       ('2', '1')
       ('3', '1')
       ('1', '3')
       ('3', '2')
       ('1', '2')
     graph:
       empty dict
     in_edges:
      1:
       [('3', '1'), ('2', '1')]
        ('3', '1')
        ('2', '1')
      2:
       [('3', '2'), ('1', '2')]
        ('3', '2')
        ('1', '2')
      3:
       [('2', '3'), ('1', '3')]
        ('2', '3')
        ('1', '3')
     in_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     name: vnet_4
     node:
      1:
       demand: 9.837131913538425
       allowed_nodes:
        ['6', '1']
       type: t2
      2:
       demand: 9.837131913538425
       allowed_nodes:
        ['6', '1']
       type: t2
      3:
       demand: 9.837131913538425
       allowed_nodes:
        ['6', '1']
       type: t2
     nodes:
      {'3', '1', '2'}
     out_edges:
      1:
       [('1', '3'), ('1', '2')]
        ('1', '3')
        ('1', '2')
      2:
       [('2', '3'), ('2', '1')]
        ('2', '3')
        ('2', '1')
      3:
       [('3', '2'), ('3', '1')]
        ('3', '2')
        ('3', '1')
     out_neighbors:
      1:
       ['3', '2']
      2:
       ['3', '1']
      3:
       ['2', '1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
    alib.datamodel.Request @ 0x1a5c3be2400
     _shortest_paths_attribute_identifier: cost
     edge:
      ('2', '1'):
       demand: 0.417287913215613
       allowed_edges: None
      ('1', '2'):
       demand: 0.417287913215613
       allowed_edges: None
     edges:
      {('1', '2'), ('2', '1')}
       ('1', '2')
       ('2', '1')
     graph:
       empty dict
     in_edges:
      1:
       [('2', '1')]
      2:
       [('1', '2')]
     in_neighbors:
      1:
       ['2']
      2:
       ['1']
     name: vnet_5
     node:
      1:
       demand: 3.8319600412321773
       allowed_nodes:
        ['6', '1']
       type: t2
      2:
       demand: 3.8319600412321773
       allowed_nodes:
        ['6', '1']
       type: t2
     nodes:
      {'1', '2'}
     out_edges:
      1:
       [('1', '2')]
      2:
       [('2', '1')]
     out_neighbors:
      1:
       ['2']
      2:
       ['1']
     profit: 0.0
     shortest_paths_costs: None
     types:
      {'t2'}
   substrate: Substrate KK_Aarnet with following attributes: 
		Nodes{'6', '3', '5', '0', '2', '4', '1'}
		Edges{('0', '2'), ('4', '2'), ('0', '1'), ('5', '4'), ('1', '0'), ('0', '3'), ('2', '4'), ('3', '1'), ('1', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('2', '0'), ('3', '0'), ('4', '3'), ('6', '5')}

 scenario_parameter_combination_list:
  [{'request_generation': {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}, 'substrate_generation': {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t1',), 'topology': 'VtlWavenet2011'}}}, 'repetition': 0, 'maxrepetition': 1}, {'request_generation': {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}, 'substrate_generation': {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t1',), 'topology': 'KK_Aarnet'}}}, 'repetition': 0, 'maxrepetition': 1}, {'request_generation': {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}, 'substrate_generation': {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t2',), 'topology': 'VtlWavenet2011'}}}, 'repetition': 0, 'maxrepetition': 1}, {'request_generation': {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}, 'substrate_generation': {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t2',), 'topology': 'KK_Aarnet'}}}, 'repetition': 0, 'maxrepetition': 1}]
   request_generation:
    {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}
   substrate_generation:
    {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t1',), 'topology': 'VtlWavenet2011'}}}
   repetition: 0
   maxrepetition: 1
   request_generation:
    {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}
   substrate_generation:
    {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t1',), 'topology': 'KK_Aarnet'}}}
   repetition: 0
   maxrepetition: 1
   request_generation:
    {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}
   substrate_generation:
    {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t2',), 'topology': 'VtlWavenet2011'}}}
   repetition: 0
   maxrepetition: 1
   request_generation:
    {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}
   substrate_generation:
    {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t2',), 'topology': 'KK_Aarnet'}}}
   repetition: 0
   maxrepetition: 1

 scenario_parameter_dict:
  substrate_generation:
   {'substrates': {'all': {0, 1, 2, 3}, 'TopologyZooReader': {'edge_capacity': {50.0: {0, 1, 2, 3}}, 'node_capacity': {50.0: {0, 1, 2, 3}}, 'node_cost_factor': {1.0: {0, 1, 2, 3}}, 'node_type_distribution': {0.3: {0, 1, 2, 3}}, 'node_types': {('t1',): {0, 1}, ('t2',): {2, 3}}, 'topology': {'VtlWavenet2011': {0, 2}, 'KK_Aarnet': {1, 3}}}}}
  request_generation:
   {'exponential': {'all': {0, 1, 2, 3}, 'ExponentialRequestGenerator': {'edge_resource_factor': {90: {0, 1, 2, 3}}, 'max_number_of_nodes': {4: {0, 1, 2, 3}}, 'min_number_of_nodes': {2: {0, 1, 2, 3}}, 'node_resource_factor': {0.5: {0, 1, 2, 3}}, 'normalize': {True: {0, 1, 2, 3}}, 'number_of_requests': {5: {0, 1, 2, 3}}, 'probability': {0.9: {0, 1, 2, 3}}}}}
  profit_calculation:
   {}
  node_placement_restriction_mapping:
   {}

 scenario_triple:
  0:
   ({'request_generation': {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}, 'substrate_generation': {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t1',), 'topology': 'VtlWavenet2011'}}}, 'repetition': 0, 'maxrepetition': 1}, <alib.datamodel.Scenario object at 0x000001A5C3BCAD90>)
    request_generation:
     {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}
    substrate_generation:
     {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t1',), 'topology': 'VtlWavenet2011'}}}
    repetition: 0
    maxrepetition: 1
   alib.datamodel.Scenario @ 0x1a5c3bcad90
    name: scenario_0.0_rep_0
    objective: 0
    requests:
     [<alib.datamodel.Request object at 0x000001A5C3BCAE50>, <alib.datamodel.Request object at 0x000001A5C3BCAEB0>, <alib.datamodel.Request object at 0x000001A5C3BCAE20>, <alib.datamodel.Request object at 0x000001A5C3BCAE80>, <alib.datamodel.Request object at 0x000001A5C3BCAD00>]
     alib.datamodel.Request @ 0x1a5c3bcae50
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '1'):
        demand: 1.4186396875503968
        allowed_edges: None
       ('2', '3'):
        demand: 1.4186396875503968
        allowed_edges: None
       ('2', '1'):
        demand: 1.4186396875503968
        allowed_edges: None
      edges:
       {('2', '3'), ('3', '1'), ('2', '1')}
        ('2', '3')
        ('3', '1')
        ('2', '1')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1')]
         ('3', '1')
         ('2', '1')
       2:
        []
       3:
        [('2', '3')]
      in_neighbors:
       1:
        ['3', '2']
       2:
        []
       3:
        ['2']
      name: vnet_1
      node:
       1:
        demand: 18.44382446104537
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       2:
        demand: 18.44382446104537
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       3:
        demand: 18.44382446104537
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
      nodes:
       {'3', '1', '2'}
      out_edges:
       1:
        []
       2:
        [('2', '3'), ('2', '1')]
         ('2', '3')
         ('2', '1')
       3:
        [('3', '1')]
      out_neighbors:
       1:
        []
       2:
        ['3', '1']
       3:
        ['1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
     alib.datamodel.Request @ 0x1a5c3bcaeb0
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 6.49367986087015
        allowed_edges: None
       ('3', '1'):
        demand: 6.49367986087015
        allowed_edges: None
       ('2', '3'):
        demand: 6.49367986087015
        allowed_edges: None
       ('2', '1'):
        demand: 6.49367986087015
        allowed_edges: None
       ('1', '2'):
        demand: 6.49367986087015
        allowed_edges: None
      edges:
       {('2', '3'), ('2', '1'), ('3', '1'), ('3', '2'), ('1', '2')}
        ('2', '3')
        ('2', '1')
        ('3', '1')
        ('3', '2')
        ('1', '2')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1')]
         ('3', '1')
         ('2', '1')
       2:
        [('3', '2'), ('1', '2')]
         ('3', '2')
         ('1', '2')
       3:
        [('2', '3')]
      in_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2']
      name: vnet_2
      node:
       1:
        demand: 84.42474330245314
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       2:
        demand: 84.42474330245314
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       3:
        demand: 84.42474330245314
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
      nodes:
       {'3', '1', '2'}
      out_edges:
       1:
        [('1', '2')]
       2:
        [('2', '3'), ('2', '1')]
         ('2', '3')
         ('2', '1')
       3:
        [('3', '2'), ('3', '1')]
         ('3', '2')
         ('3', '1')
      out_neighbors:
       1:
        ['2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
     alib.datamodel.Request @ 0x1a5c3bcae20
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('3', '4'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('2', '3'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('2', '1'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('2', '4'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('1', '3'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('1', '2'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('1', '4'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('4', '3'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('4', '2'):
        demand: 3.8420228045113296
        allowed_edges: None
       ('4', '1'):
        demand: 3.8420228045113296
        allowed_edges: None
      edges:
       {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
        ('4', '2')
        ('2', '3')
        ('2', '4')
        ('2', '1')
        ('1', '3')
        ('3', '4')
        ('1', '4')
        ('3', '2')
        ('1', '2')
        ('4', '1')
        ('4', '3')
      graph:
        empty dict
      in_edges:
       1:
        [('2', '1'), ('4', '1')]
         ('2', '1')
         ('4', '1')
       2:
        [('3', '2'), ('1', '2'), ('4', '2')]
         ('3', '2')
         ('1', '2')
         ('4', '2')
       3:
        [('2', '3'), ('1', '3'), ('4', '3')]
         ('2', '3')
         ('1', '3')
         ('4', '3')
       4:
        [('3', '4'), ('2', '4'), ('1', '4')]
         ('3', '4')
         ('2', '4')
         ('1', '4')
      in_neighbors:
       1:
        ['2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      name: vnet_3
      node:
       1:
        demand: 49.950381907120345
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       2:
        demand: 49.950381907120345
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       3:
        demand: 49.950381907120345
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       4:
        demand: 49.950381907120345
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
      nodes:
       {'3', '1', '4', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2'), ('1', '4')]
         ('1', '3')
         ('1', '2')
         ('1', '4')
       2:
        [('2', '3'), ('2', '1'), ('2', '4')]
         ('2', '3')
         ('2', '1')
         ('2', '4')
       3:
        [('3', '2'), ('3', '4')]
         ('3', '2')
         ('3', '4')
       4:
        [('4', '3'), ('4', '2'), ('4', '1')]
         ('4', '3')
         ('4', '2')
         ('4', '1')
      out_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '4']
       4:
        ['3', '2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
     alib.datamodel.Request @ 0x1a5c3bcae80
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('3', '1'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('3', '4'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('2', '3'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('2', '1'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('2', '4'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('1', '3'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('1', '2'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('1', '4'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('4', '3'):
        demand: 2.1237595979620876
        allowed_edges: None
       ('4', '2'):
        demand: 2.1237595979620876
        allowed_edges: None
      edges:
       {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '3')}
        ('4', '2')
        ('2', '3')
        ('2', '4')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '4')
        ('1', '4')
        ('3', '2')
        ('1', '2')
        ('4', '3')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1')]
         ('3', '1')
         ('2', '1')
       2:
        [('3', '2'), ('1', '2'), ('4', '2')]
         ('3', '2')
         ('1', '2')
         ('4', '2')
       3:
        [('2', '3'), ('1', '3'), ('4', '3')]
         ('2', '3')
         ('1', '3')
         ('4', '3')
       4:
        [('3', '4'), ('2', '4'), ('1', '4')]
         ('3', '4')
         ('2', '4')
         ('1', '4')
      in_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      name: vnet_4
      node:
       1:
        demand: 27.611133091806664
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       2:
        demand: 27.611133091806664
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       3:
        demand: 27.611133091806664
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       4:
        demand: 27.611133091806664
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
      nodes:
       {'3', '1', '4', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2'), ('1', '4')]
         ('1', '3')
         ('1', '2')
         ('1', '4')
       2:
        [('2', '3'), ('2', '1'), ('2', '4')]
         ('2', '3')
         ('2', '1')
         ('2', '4')
       3:
        [('3', '2'), ('3', '1'), ('3', '4')]
         ('3', '2')
         ('3', '1')
         ('3', '4')
       4:
        [('4', '3'), ('4', '2')]
         ('4', '3')
         ('4', '2')
      out_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
     alib.datamodel.Request @ 0x1a5c3bcad00
      _shortest_paths_attribute_identifier: cost
      edge:
       ('2', '1'):
        demand: 2.159370936228571
        allowed_edges: None
       ('1', '2'):
        demand: 2.159370936228571
        allowed_edges: None
      edges:
       {('1', '2'), ('2', '1')}
        ('1', '2')
        ('2', '1')
      graph:
        empty dict
      in_edges:
       1:
        [('2', '1')]
       2:
        [('1', '2')]
      in_neighbors:
       1:
        ['2']
       2:
        ['1']
      name: vnet_5
      node:
       1:
        demand: 28.07411835689823
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
       2:
        demand: 28.07411835689823
        allowed_nodes:
         ['6', '45', '47', '73', '4', '85', '84', '89', '40', '76', '21', '44', '62', '35', '9', '51', '59', '24', '71', '43', '8', '81', '39', '53', '37', '86', '52']
        type: t1
      nodes:
       {'1', '2'}
      out_edges:
       1:
        [('1', '2')]
       2:
        [('2', '1')]
      out_neighbors:
       1:
        ['2']
       2:
        ['1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
    substrate: Substrate VtlWavenet2011 with following attributes: 
		Nodes{'9', '23', '19', '62', '42', '31', '85', '84', '30', '80', '82', '71', '12', '66', '4', '48', '68', '86', '64', '24', '28', '43', '22', '6', '37', '13', '44', '32', '73', '89', '57', '26', '50', '18', '17', '63', '5', '70', '75', '3', '27', '65', '51', '11', '16', '79', '90', '72', '1', '76', '61', '88', '0', '39', '49', '45', '54', '78', '46', '58', '29', '25', '15', '8', '67', '33', '2', '83', '55', '10', '87', '36', '14', '47', '69', '38', '7', '60', '74', '21', '56', '52', '53', '59', '91', '81', '77', '20', '35', '34', '41', '40'}
		Edges{('20', '23'), ('71', '70'), ('87', '63'), ('91', '37'), ('48', '47'), ('39', '38'), ('47', '26'), ('53', '52'), ('3', '4'), ('62', '65'), ('11', '10'), ('36', '55'), ('74', '75'), ('31', '30'), ('20', '21'), ('47', '27'), ('40', '79'), ('18', '33'), ('49', '81'), ('24', '28'), ('78', '2'), ('8', '11'), ('7', '11'), ('46', '40'), ('22', '83'), ('82', '35'), ('34', '33'), ('35', '82'), ('77', '50'), ('71', '68'), ('17', '61'), ('16', '64'), ('37', '91'), ('56', '57'), ('5', '6'), ('69', '66'), ('38', '90'), ('11', '7'), ('40', '46'), ('91', '36'), ('3', '2'), ('27', '47'), ('72', '54'), ('6', '5'), ('11', '8'), ('83', '35'), ('13', '77'), ('57', '54'), ('29', '51'), ('33', '34'), ('85', '84'), ('18', '30'), ('44', '75'), ('65', '12'), ('8', '9'), ('64', '16'), ('76', '44'), ('66', '67'), ('28', '24'), ('21', '46'), ('35', '83'), ('5', '4'), ('73', '72'), ('80', '81'), ('73', '46'), ('22', '23'), ('14', '52'), ('42', '49'), ('7', '6'), ('13', '29'), ('25', '24'), ('60', '17'), ('30', '18'), ('51', '28'), ('30', '31'), ('31', '19'), ('15', '51'), ('51', '15'), ('68', '69'), ('39', '37'), ('23', '22'), ('79', '26'), ('77', '13'), ('4', '3'), ('26', '47'), ('76', '45'), ('0', '32'), ('61', '17'), ('67', '16'), ('79', '40'), ('10', '11'), ('23', '20'), ('87', '88'), ('12', '65'), ('70', '14'), ('38', '39'), ('58', '59'), ('60', '53'), ('25', '15'), ('46', '73'), ('2', '78'), ('63', '86'), ('51', '29'), ('32', '0'), ('89', '90'), ('9', '8'), ('48', '80'), ('66', '69'), ('55', '36'), ('58', '61'), ('54', '57'), ('64', '12'), ('90', '89'), ('2', '3'), ('24', '27'), ('34', '55'), ('44', '76'), ('36', '82'), ('1', '32'), ('42', '43'), ('14', '70'), ('45', '76'), ('80', '48'), ('59', '58'), ('41', '9'), ('43', '74'), ('86', '63'), ('41', '0'), ('47', '48'), ('89', '88'), ('0', '41'), ('81', '80'), ('46', '78'), ('17', '60'), ('82', '36'), ('16', '67'), ('50', '45'), ('10', '62'), ('9', '41'), ('63', '87'), ('70', '71'), ('69', '68'), ('46', '21'), ('6', '7'), ('56', '59'), ('68', '71'), ('75', '74'), ('65', '62'), ('29', '13'), ('1', '33'), ('33', '18'), ('86', '84'), ('52', '53'), ('55', '34'), ('4', '5'), ('74', '43'), ('49', '42'), ('57', '56'), ('54', '72'), ('62', '10'), ('81', '49'), ('43', '42'), ('61', '58'), ('53', '60'), ('59', '56'), ('88', '89'), ('88', '87'), ('50', '77'), ('75', '44'), ('32', '1'), ('33', '1'), ('83', '22'), ('45', '50'), ('52', '14'), ('72', '73'), ('27', '24'), ('24', '25'), ('15', '25'), ('90', '38'), ('84', '86'), ('84', '85'), ('28', '51'), ('12', '64'), ('37', '39'), ('78', '46'), ('45', '85'), ('36', '91'), ('21', '20'), ('19', '31'), ('67', '66'), ('85', '45'), ('26', '79')}
  1:
   ({'request_generation': {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}, 'substrate_generation': {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t1',), 'topology': 'KK_Aarnet'}}}, 'repetition': 0, 'maxrepetition': 1}, <alib.datamodel.Scenario object at 0x000001A5C3BCAFA0>)
    request_generation:
     {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}
    substrate_generation:
     {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t1',), 'topology': 'KK_Aarnet'}}}
    repetition: 0
    maxrepetition: 1
   alib.datamodel.Scenario @ 0x1a5c3bcafa0
    name: scenario_1.0_rep_0
    objective: 0
    requests:
     [<alib.datamodel.Request object at 0x000001A5C3BCAF70>, <alib.datamodel.Request object at 0x000001A5C3BCAEE0>, <alib.datamodel.Request object at 0x000001A5C3BCAF10>, <alib.datamodel.Request object at 0x000001A5C3BCAFD0>, <alib.datamodel.Request object at 0x000001A5C3BE2100>]
     alib.datamodel.Request @ 0x1a5c3bcaf70
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('3', '1'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('3', '4'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('2', '3'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('2', '1'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('2', '4'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('1', '3'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('1', '2'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('1', '4'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('4', '3'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('4', '2'):
        demand: 0.21881311318592794
        allowed_edges: None
       ('4', '1'):
        demand: 0.21881311318592794
        allowed_edges: None
      edges:
       {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
        ('4', '2')
        ('2', '3')
        ('2', '4')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '4')
        ('1', '4')
        ('3', '2')
        ('1', '2')
        ('4', '1')
        ('4', '3')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1'), ('4', '1')]
         ('3', '1')
         ('2', '1')
         ('4', '1')
       2:
        [('3', '2'), ('1', '2'), ('4', '2')]
         ('3', '2')
         ('1', '2')
         ('4', '2')
       3:
        [('2', '3'), ('1', '3'), ('4', '3')]
         ('2', '3')
         ('1', '3')
         ('4', '3')
       4:
        [('3', '4'), ('2', '4'), ('1', '4')]
         ('3', '4')
         ('2', '4')
         ('1', '4')
      in_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      name: vnet_1
      node:
       1:
        demand: 2.8702614205111905
        allowed_nodes:
         ['6', '4']
        type: t1
       2:
        demand: 2.8702614205111905
        allowed_nodes:
         ['6', '4']
        type: t1
       3:
        demand: 2.8702614205111905
        allowed_nodes:
         ['6', '4']
        type: t1
       4:
        demand: 2.8702614205111905
        allowed_nodes:
         ['6', '4']
        type: t1
      nodes:
       {'3', '1', '4', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2'), ('1', '4')]
         ('1', '3')
         ('1', '2')
         ('1', '4')
       2:
        [('2', '3'), ('2', '1'), ('2', '4')]
         ('2', '3')
         ('2', '1')
         ('2', '4')
       3:
        [('3', '2'), ('3', '1'), ('3', '4')]
         ('3', '2')
         ('3', '1')
         ('3', '4')
       4:
        [('4', '3'), ('4', '2'), ('4', '1')]
         ('4', '3')
         ('4', '2')
         ('4', '1')
      out_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
     alib.datamodel.Request @ 0x1a5c3bcaee0
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '1'):
        demand: 0.42893818438379866
        allowed_edges: None
       ('2', '3'):
        demand: 0.42893818438379866
        allowed_edges: None
       ('2', '1'):
        demand: 0.42893818438379866
        allowed_edges: None
       ('1', '2'):
        demand: 0.42893818438379866
        allowed_edges: None
      edges:
       {('2', '3'), ('1', '2'), ('3', '1'), ('2', '1')}
        ('2', '3')
        ('1', '2')
        ('3', '1')
        ('2', '1')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1')]
         ('3', '1')
         ('2', '1')
       2:
        [('1', '2')]
       3:
        [('2', '3')]
      in_neighbors:
       1:
        ['3', '2']
       2:
        ['1']
       3:
        ['2']
      name: vnet_2
      node:
       1:
        demand: 5.626558228138723
        allowed_nodes:
         ['6', '4']
        type: t1
       2:
        demand: 5.626558228138723
        allowed_nodes:
         ['6', '4']
        type: t1
       3:
        demand: 5.626558228138723
        allowed_nodes:
         ['6', '4']
        type: t1
      nodes:
       {'3', '1', '2'}
      out_edges:
       1:
        [('1', '2')]
       2:
        [('2', '3'), ('2', '1')]
         ('2', '3')
         ('2', '1')
       3:
        [('3', '1')]
      out_neighbors:
       1:
        ['2']
       2:
        ['3', '1']
       3:
        ['1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
     alib.datamodel.Request @ 0x1a5c3bcaf10
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('3', '1'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('3', '4'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('2', '3'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('2', '1'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('2', '4'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('1', '3'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('1', '2'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('1', '4'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('4', '3'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('4', '2'):
        demand: 0.2820828279334438
        allowed_edges: None
       ('4', '1'):
        demand: 0.2820828279334438
        allowed_edges: None
      edges:
       {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
        ('4', '2')
        ('2', '3')
        ('2', '4')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '4')
        ('1', '4')
        ('3', '2')
        ('1', '2')
        ('4', '1')
        ('4', '3')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1'), ('4', '1')]
         ('3', '1')
         ('2', '1')
         ('4', '1')
       2:
        [('3', '2'), ('1', '2'), ('4', '2')]
         ('3', '2')
         ('1', '2')
         ('4', '2')
       3:
        [('2', '3'), ('1', '3'), ('4', '3')]
         ('2', '3')
         ('1', '3')
         ('4', '3')
       4:
        [('3', '4'), ('2', '4'), ('1', '4')]
         ('3', '4')
         ('2', '4')
         ('1', '4')
      in_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      name: vnet_3
      node:
       1:
        demand: 3.700196238778844
        allowed_nodes:
         ['6', '4']
        type: t1
       2:
        demand: 3.700196238778844
        allowed_nodes:
         ['6', '4']
        type: t1
       3:
        demand: 3.700196238778844
        allowed_nodes:
         ['6', '4']
        type: t1
       4:
        demand: 3.700196238778844
        allowed_nodes:
         ['6', '4']
        type: t1
      nodes:
       {'3', '1', '4', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2'), ('1', '4')]
         ('1', '3')
         ('1', '2')
         ('1', '4')
       2:
        [('2', '3'), ('2', '1'), ('2', '4')]
         ('2', '3')
         ('2', '1')
         ('2', '4')
       3:
        [('3', '2'), ('3', '1'), ('3', '4')]
         ('3', '2')
         ('3', '1')
         ('3', '4')
       4:
        [('4', '3'), ('4', '2'), ('4', '1')]
         ('4', '3')
         ('4', '2')
         ('4', '1')
      out_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
     alib.datamodel.Request @ 0x1a5c3bcafd0
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('3', '1'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('3', '4'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('2', '3'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('2', '4'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('1', '3'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('1', '2'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('1', '4'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('4', '3'):
        demand: 0.05986280393127171
        allowed_edges: None
       ('4', '1'):
        demand: 0.05986280393127171
        allowed_edges: None
      edges:
       {('2', '3'), ('2', '4'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
        ('2', '3')
        ('2', '4')
        ('3', '1')
        ('1', '3')
        ('3', '4')
        ('1', '4')
        ('3', '2')
        ('1', '2')
        ('4', '1')
        ('4', '3')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('4', '1')]
         ('3', '1')
         ('4', '1')
       2:
        [('3', '2'), ('1', '2')]
         ('3', '2')
         ('1', '2')
       3:
        [('2', '3'), ('1', '3'), ('4', '3')]
         ('2', '3')
         ('1', '3')
         ('4', '3')
       4:
        [('3', '4'), ('2', '4'), ('1', '4')]
         ('3', '4')
         ('2', '4')
         ('1', '4')
      in_neighbors:
       1:
        ['3', '4']
       2:
        ['3', '1']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      name: vnet_4
      node:
       1:
        demand: 0.7852449706775838
        allowed_nodes:
         ['6', '4']
        type: t1
       2:
        demand: 0.7852449706775838
        allowed_nodes:
         ['6', '4']
        type: t1
       3:
        demand: 0.7852449706775838
        allowed_nodes:
         ['6', '4']
        type: t1
       4:
        demand: 0.7852449706775838
        allowed_nodes:
         ['6', '4']
        type: t1
      nodes:
       {'3', '1', '4', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2'), ('1', '4')]
         ('1', '3')
         ('1', '2')
         ('1', '4')
       2:
        [('2', '3'), ('2', '4')]
         ('2', '3')
         ('2', '4')
       3:
        [('3', '2'), ('3', '1'), ('3', '4')]
         ('3', '2')
         ('3', '1')
         ('3', '4')
       4:
        [('4', '3'), ('4', '1')]
         ('4', '3')
         ('4', '1')
      out_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
     alib.datamodel.Request @ 0x1a5c3be2100
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 0.09395946976808581
        allowed_edges: None
       ('3', '1'):
        demand: 0.09395946976808581
        allowed_edges: None
       ('2', '3'):
        demand: 0.09395946976808581
        allowed_edges: None
       ('2', '1'):
        demand: 0.09395946976808581
        allowed_edges: None
       ('1', '3'):
        demand: 0.09395946976808581
        allowed_edges: None
       ('1', '2'):
        demand: 0.09395946976808581
        allowed_edges: None
      edges:
       {('2', '3'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
        ('2', '3')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '2')
        ('1', '2')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1')]
         ('3', '1')
         ('2', '1')
       2:
        [('3', '2'), ('1', '2')]
         ('3', '2')
         ('1', '2')
       3:
        [('2', '3'), ('1', '3')]
         ('2', '3')
         ('1', '3')
      in_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      name: vnet_5
      node:
       1:
        demand: 1.2325049319044563
        allowed_nodes:
         ['6', '4']
        type: t1
       2:
        demand: 1.2325049319044563
        allowed_nodes:
         ['6', '4']
        type: t1
       3:
        demand: 1.2325049319044563
        allowed_nodes:
         ['6', '4']
        type: t1
      nodes:
       {'3', '1', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2')]
         ('1', '3')
         ('1', '2')
       2:
        [('2', '3'), ('2', '1')]
         ('2', '3')
         ('2', '1')
       3:
        [('3', '2'), ('3', '1')]
         ('3', '2')
         ('3', '1')
      out_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t1'}
    substrate: Substrate KK_Aarnet with following attributes: 
		Nodes{'6', '3', '5', '0', '2', '4', '1'}
		Edges{('0', '2'), ('4', '2'), ('0', '1'), ('5', '4'), ('1', '0'), ('0', '3'), ('2', '4'), ('3', '1'), ('1', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('2', '0'), ('3', '0'), ('4', '3'), ('6', '5')}
  2:
   ({'request_generation': {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}, 'substrate_generation': {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t2',), 'topology': 'VtlWavenet2011'}}}, 'repetition': 0, 'maxrepetition': 1}, <alib.datamodel.Scenario object at 0x000001A5C3BE2190>)
    request_generation:
     {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}
    substrate_generation:
     {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t2',), 'topology': 'VtlWavenet2011'}}}
    repetition: 0
    maxrepetition: 1
   alib.datamodel.Scenario @ 0x1a5c3be2190
    name: scenario_2.0_rep_0
    objective: 0
    requests:
     [<alib.datamodel.Request object at 0x000001A5C3BE21C0>, <alib.datamodel.Request object at 0x000001A5C3BE21F0>, <alib.datamodel.Request object at 0x000001A5C3BE2220>, <alib.datamodel.Request object at 0x000001A5C3BE2250>, <alib.datamodel.Request object at 0x000001A5C3BE2280>]
     alib.datamodel.Request @ 0x1a5c3be21c0
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 2.6190688096634216
        allowed_edges: None
       ('3', '1'):
        demand: 2.6190688096634216
        allowed_edges: None
       ('2', '3'):
        demand: 2.6190688096634216
        allowed_edges: None
       ('2', '1'):
        demand: 2.6190688096634216
        allowed_edges: None
       ('1', '3'):
        demand: 2.6190688096634216
        allowed_edges: None
       ('1', '2'):
        demand: 2.6190688096634216
        allowed_edges: None
      edges:
       {('2', '3'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
        ('2', '3')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '2')
        ('1', '2')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1')]
         ('3', '1')
         ('2', '1')
       2:
        [('3', '2'), ('1', '2')]
         ('3', '2')
         ('1', '2')
       3:
        [('2', '3'), ('1', '3')]
         ('2', '3')
         ('1', '3')
      in_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      name: vnet_1
      node:
       1:
        demand: 39.39052265846829
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       2:
        demand: 39.39052265846829
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       3:
        demand: 39.39052265846829
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
      nodes:
       {'3', '1', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2')]
         ('1', '3')
         ('1', '2')
       2:
        [('2', '3'), ('2', '1')]
         ('2', '3')
         ('2', '1')
       3:
        [('3', '2'), ('3', '1')]
         ('3', '2')
         ('3', '1')
      out_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
     alib.datamodel.Request @ 0x1a5c3be21f0
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 4.665177102133816
        allowed_edges: None
       ('3', '1'):
        demand: 4.665177102133816
        allowed_edges: None
       ('3', '4'):
        demand: 4.665177102133816
        allowed_edges: None
       ('2', '3'):
        demand: 4.665177102133816
        allowed_edges: None
       ('2', '1'):
        demand: 4.665177102133816
        allowed_edges: None
       ('2', '4'):
        demand: 4.665177102133816
        allowed_edges: None
       ('1', '3'):
        demand: 4.665177102133816
        allowed_edges: None
       ('1', '2'):
        demand: 4.665177102133816
        allowed_edges: None
       ('1', '4'):
        demand: 4.665177102133816
        allowed_edges: None
       ('4', '3'):
        demand: 4.665177102133816
        allowed_edges: None
       ('4', '2'):
        demand: 4.665177102133816
        allowed_edges: None
       ('4', '1'):
        demand: 4.665177102133816
        allowed_edges: None
      edges:
       {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
        ('4', '2')
        ('2', '3')
        ('2', '4')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '4')
        ('1', '4')
        ('3', '2')
        ('1', '2')
        ('4', '1')
        ('4', '3')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1'), ('4', '1')]
         ('3', '1')
         ('2', '1')
         ('4', '1')
       2:
        [('3', '2'), ('1', '2'), ('4', '2')]
         ('3', '2')
         ('1', '2')
         ('4', '2')
       3:
        [('2', '3'), ('1', '3'), ('4', '3')]
         ('2', '3')
         ('1', '3')
         ('4', '3')
       4:
        [('3', '4'), ('2', '4'), ('1', '4')]
         ('3', '4')
         ('2', '4')
         ('1', '4')
      in_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      name: vnet_2
      node:
       1:
        demand: 70.16377869468239
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       2:
        demand: 70.16377869468239
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       3:
        demand: 70.16377869468239
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       4:
        demand: 70.16377869468239
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
      nodes:
       {'3', '1', '4', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2'), ('1', '4')]
         ('1', '3')
         ('1', '2')
         ('1', '4')
       2:
        [('2', '3'), ('2', '1'), ('2', '4')]
         ('2', '3')
         ('2', '1')
         ('2', '4')
       3:
        [('3', '2'), ('3', '1'), ('3', '4')]
         ('3', '2')
         ('3', '1')
         ('3', '4')
       4:
        [('4', '3'), ('4', '2'), ('4', '1')]
         ('4', '3')
         ('4', '2')
         ('4', '1')
      out_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
     alib.datamodel.Request @ 0x1a5c3be2220
      _shortest_paths_attribute_identifier: cost
      edge:
       ('2', '1'):
        demand: 3.960785620890775
        allowed_edges: None
      edges:
       {('2', '1')}
        ('2', '1')
      graph:
        empty dict
      in_edges:
       1:
        [('2', '1')]
       2:
        []
      in_neighbors:
       1:
        ['2']
       2:
        []
      name: vnet_3
      node:
       1:
        demand: 59.5698040346956
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       2:
        demand: 59.5698040346956
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
      nodes:
       {'1', '2'}
      out_edges:
       1:
        []
       2:
        [('2', '1')]
      out_neighbors:
       1:
        []
       2:
        ['1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
     alib.datamodel.Request @ 0x1a5c3be2250
      _shortest_paths_attribute_identifier: cost
      edge:
       ('2', '1'):
        demand: 0.07852169696064547
        allowed_edges: None
       ('1', '2'):
        demand: 0.07852169696064547
        allowed_edges: None
      edges:
       {('1', '2'), ('2', '1')}
        ('1', '2')
        ('2', '1')
      graph:
        empty dict
      in_edges:
       1:
        [('2', '1')]
       2:
        [('1', '2')]
      in_neighbors:
       1:
        ['2']
       2:
        ['1']
      name: vnet_4
      node:
       1:
        demand: 1.1809581603574486
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       2:
        demand: 1.1809581603574486
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
      nodes:
       {'1', '2'}
      out_edges:
       1:
        [('1', '2')]
       2:
        [('2', '1')]
      out_neighbors:
       1:
        ['2']
       2:
        ['1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
     alib.datamodel.Request @ 0x1a5c3be2280
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('3', '1'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('3', '4'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('2', '3'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('2', '1'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('2', '4'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('1', '3'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('1', '2'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('1', '4'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('4', '3'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('4', '2'):
        demand: 2.5710249640223566
        allowed_edges: None
       ('4', '1'):
        demand: 2.5710249640223566
        allowed_edges: None
      edges:
       {('4', '2'), ('2', '3'), ('2', '4'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '4'), ('1', '4'), ('3', '2'), ('1', '2'), ('4', '1'), ('4', '3')}
        ('4', '2')
        ('2', '3')
        ('2', '4')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '4')
        ('1', '4')
        ('3', '2')
        ('1', '2')
        ('4', '1')
        ('4', '3')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1'), ('4', '1')]
         ('3', '1')
         ('2', '1')
         ('4', '1')
       2:
        [('3', '2'), ('1', '2'), ('4', '2')]
         ('3', '2')
         ('1', '2')
         ('4', '2')
       3:
        [('2', '3'), ('1', '3'), ('4', '3')]
         ('2', '3')
         ('1', '3')
         ('4', '3')
       4:
        [('3', '4'), ('2', '4'), ('1', '4')]
         ('3', '4')
         ('2', '4')
         ('1', '4')
      in_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      name: vnet_5
      node:
       1:
        demand: 38.66794821393986
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       2:
        demand: 38.66794821393986
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       3:
        demand: 38.66794821393986
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
       4:
        demand: 38.66794821393986
        allowed_nodes:
         ['6', '48', '68', '27', '4', '38', '85', '84', '55', '82', '10', '33', '69', '72', '9', '51', '59', '60', '15', '34', '7', '87', '16', '8', '17', '37', '5']
        type: t2
      nodes:
       {'3', '1', '4', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2'), ('1', '4')]
         ('1', '3')
         ('1', '2')
         ('1', '4')
       2:
        [('2', '3'), ('2', '1'), ('2', '4')]
         ('2', '3')
         ('2', '1')
         ('2', '4')
       3:
        [('3', '2'), ('3', '1'), ('3', '4')]
         ('3', '2')
         ('3', '1')
         ('3', '4')
       4:
        [('4', '3'), ('4', '2'), ('4', '1')]
         ('4', '3')
         ('4', '2')
         ('4', '1')
      out_neighbors:
       1:
        ['3', '2', '4']
       2:
        ['3', '1', '4']
       3:
        ['2', '1', '4']
       4:
        ['3', '2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
    substrate: Substrate VtlWavenet2011 with following attributes: 
		Nodes{'9', '23', '19', '62', '42', '31', '85', '84', '30', '80', '82', '71', '12', '66', '4', '48', '68', '86', '64', '24', '28', '43', '22', '6', '37', '13', '44', '32', '73', '89', '57', '26', '50', '18', '17', '63', '5', '70', '75', '3', '27', '65', '51', '11', '16', '79', '90', '72', '1', '76', '61', '88', '0', '39', '49', '45', '54', '78', '46', '58', '29', '25', '15', '8', '67', '33', '2', '83', '55', '10', '87', '36', '14', '47', '69', '38', '7', '60', '74', '21', '56', '52', '53', '59', '91', '81', '77', '20', '35', '34', '41', '40'}
		Edges{('20', '23'), ('71', '70'), ('87', '63'), ('91', '37'), ('48', '47'), ('39', '38'), ('47', '26'), ('53', '52'), ('3', '4'), ('62', '65'), ('11', '10'), ('36', '55'), ('74', '75'), ('31', '30'), ('20', '21'), ('47', '27'), ('40', '79'), ('18', '33'), ('49', '81'), ('24', '28'), ('78', '2'), ('8', '11'), ('7', '11'), ('46', '40'), ('22', '83'), ('82', '35'), ('34', '33'), ('35', '82'), ('77', '50'), ('71', '68'), ('17', '61'), ('16', '64'), ('37', '91'), ('56', '57'), ('5', '6'), ('69', '66'), ('38', '90'), ('11', '7'), ('40', '46'), ('91', '36'), ('3', '2'), ('27', '47'), ('72', '54'), ('6', '5'), ('11', '8'), ('83', '35'), ('13', '77'), ('57', '54'), ('29', '51'), ('33', '34'), ('85', '84'), ('18', '30'), ('44', '75'), ('65', '12'), ('8', '9'), ('64', '16'), ('76', '44'), ('66', '67'), ('28', '24'), ('21', '46'), ('35', '83'), ('5', '4'), ('73', '72'), ('80', '81'), ('73', '46'), ('22', '23'), ('14', '52'), ('42', '49'), ('7', '6'), ('13', '29'), ('25', '24'), ('60', '17'), ('30', '18'), ('51', '28'), ('30', '31'), ('31', '19'), ('15', '51'), ('51', '15'), ('68', '69'), ('39', '37'), ('23', '22'), ('79', '26'), ('77', '13'), ('4', '3'), ('26', '47'), ('76', '45'), ('0', '32'), ('61', '17'), ('67', '16'), ('79', '40'), ('10', '11'), ('23', '20'), ('87', '88'), ('12', '65'), ('70', '14'), ('38', '39'), ('58', '59'), ('60', '53'), ('25', '15'), ('46', '73'), ('2', '78'), ('63', '86'), ('51', '29'), ('32', '0'), ('89', '90'), ('9', '8'), ('48', '80'), ('66', '69'), ('55', '36'), ('58', '61'), ('54', '57'), ('64', '12'), ('90', '89'), ('2', '3'), ('24', '27'), ('34', '55'), ('44', '76'), ('36', '82'), ('1', '32'), ('42', '43'), ('14', '70'), ('45', '76'), ('80', '48'), ('59', '58'), ('41', '9'), ('43', '74'), ('86', '63'), ('41', '0'), ('47', '48'), ('89', '88'), ('0', '41'), ('81', '80'), ('46', '78'), ('17', '60'), ('82', '36'), ('16', '67'), ('50', '45'), ('10', '62'), ('9', '41'), ('63', '87'), ('70', '71'), ('69', '68'), ('46', '21'), ('6', '7'), ('56', '59'), ('68', '71'), ('75', '74'), ('65', '62'), ('29', '13'), ('1', '33'), ('33', '18'), ('86', '84'), ('52', '53'), ('55', '34'), ('4', '5'), ('74', '43'), ('49', '42'), ('57', '56'), ('54', '72'), ('62', '10'), ('81', '49'), ('43', '42'), ('61', '58'), ('53', '60'), ('59', '56'), ('88', '89'), ('88', '87'), ('50', '77'), ('75', '44'), ('32', '1'), ('33', '1'), ('83', '22'), ('45', '50'), ('52', '14'), ('72', '73'), ('27', '24'), ('24', '25'), ('15', '25'), ('90', '38'), ('84', '86'), ('84', '85'), ('28', '51'), ('12', '64'), ('37', '39'), ('78', '46'), ('45', '85'), ('36', '91'), ('21', '20'), ('19', '31'), ('67', '66'), ('85', '45'), ('26', '79')}
  3:
   ({'request_generation': {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}, 'substrate_generation': {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t2',), 'topology': 'KK_Aarnet'}}}, 'repetition': 0, 'maxrepetition': 1}, <alib.datamodel.Scenario object at 0x000001A5C3BE2310>)
    request_generation:
     {'exponential': {'ExponentialRequestGenerator': {'edge_resource_factor': 90, 'max_number_of_nodes': 4, 'min_number_of_nodes': 2, 'node_resource_factor': 0.5, 'normalize': True, 'number_of_requests': 5, 'probability': 0.9}}}
    substrate_generation:
     {'substrates': {'TopologyZooReader': {'edge_capacity': 50.0, 'node_capacity': 50.0, 'node_cost_factor': 1.0, 'node_type_distribution': 0.3, 'node_types': ('t2',), 'topology': 'KK_Aarnet'}}}
    repetition: 0
    maxrepetition: 1
   alib.datamodel.Scenario @ 0x1a5c3be2310
    name: scenario_3.0_rep_0
    objective: 0
    requests:
     [<alib.datamodel.Request object at 0x000001A5C3BE2340>, <alib.datamodel.Request object at 0x000001A5C3BE2370>, <alib.datamodel.Request object at 0x000001A5C3BE23A0>, <alib.datamodel.Request object at 0x000001A5C3BE23D0>, <alib.datamodel.Request object at 0x000001A5C3BE2400>]
     alib.datamodel.Request @ 0x1a5c3be2340
      _shortest_paths_attribute_identifier: cost
      edge:
       ('2', '1'):
        demand: 0.37839081362352417
        allowed_edges: None
      edges:
       {('2', '1')}
        ('2', '1')
      graph:
        empty dict
      in_edges:
       1:
        [('2', '1')]
       2:
        []
      in_neighbors:
       1:
        ['2']
       2:
        []
      name: vnet_1
      node:
       1:
        demand: 3.4747674971009084
        allowed_nodes:
         ['6', '1']
        type: t2
       2:
        demand: 3.4747674971009084
        allowed_nodes:
         ['6', '1']
        type: t2
      nodes:
       {'1', '2'}
      out_edges:
       1:
        []
       2:
        [('2', '1')]
      out_neighbors:
       1:
        []
       2:
        ['1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
     alib.datamodel.Request @ 0x1a5c3be2370
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 0.031035719454252687
        allowed_edges: None
       ('2', '3'):
        demand: 0.031035719454252687
        allowed_edges: None
       ('2', '1'):
        demand: 0.031035719454252687
        allowed_edges: None
       ('1', '3'):
        demand: 0.031035719454252687
        allowed_edges: None
       ('1', '2'):
        demand: 0.031035719454252687
        allowed_edges: None
      edges:
       {('2', '3'), ('2', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
        ('2', '3')
        ('2', '1')
        ('1', '3')
        ('3', '2')
        ('1', '2')
      graph:
        empty dict
      in_edges:
       1:
        [('2', '1')]
       2:
        [('3', '2'), ('1', '2')]
         ('3', '2')
         ('1', '2')
       3:
        [('2', '3'), ('1', '3')]
         ('2', '3')
         ('1', '3')
      in_neighbors:
       1:
        ['2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      name: vnet_2
      node:
       1:
        demand: 0.2850013936016843
        allowed_nodes:
         ['6', '1']
        type: t2
       2:
        demand: 0.2850013936016843
        allowed_nodes:
         ['6', '1']
        type: t2
       3:
        demand: 0.2850013936016843
        allowed_nodes:
         ['6', '1']
        type: t2
      nodes:
       {'3', '1', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2')]
         ('1', '3')
         ('1', '2')
       2:
        [('2', '3'), ('2', '1')]
         ('2', '3')
         ('2', '1')
       3:
        [('3', '2')]
      out_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
     alib.datamodel.Request @ 0x1a5c3be23a0
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 0.18222578953047358
        allowed_edges: None
       ('3', '1'):
        demand: 0.18222578953047358
        allowed_edges: None
       ('2', '3'):
        demand: 0.18222578953047358
        allowed_edges: None
       ('2', '1'):
        demand: 0.18222578953047358
        allowed_edges: None
       ('1', '3'):
        demand: 0.18222578953047358
        allowed_edges: None
       ('1', '2'):
        demand: 0.18222578953047358
        allowed_edges: None
      edges:
       {('2', '3'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
        ('2', '3')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '2')
        ('1', '2')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1')]
         ('3', '1')
         ('2', '1')
       2:
        [('3', '2'), ('1', '2')]
         ('3', '2')
         ('1', '2')
       3:
        [('2', '3'), ('1', '3')]
         ('2', '3')
         ('1', '3')
      in_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      name: vnet_3
      node:
       1:
        demand: 1.6733816673045039
        allowed_nodes:
         ['6', '1']
        type: t2
       2:
        demand: 1.6733816673045039
        allowed_nodes:
         ['6', '1']
        type: t2
       3:
        demand: 1.6733816673045039
        allowed_nodes:
         ['6', '1']
        type: t2
      nodes:
       {'3', '1', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2')]
         ('1', '3')
         ('1', '2')
       2:
        [('2', '3'), ('2', '1')]
         ('2', '3')
         ('2', '1')
       3:
        [('3', '2'), ('3', '1')]
         ('3', '2')
         ('3', '1')
      out_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
     alib.datamodel.Request @ 0x1a5c3be23d0
      _shortest_paths_attribute_identifier: cost
      edge:
       ('3', '2'):
        demand: 1.0712314857300056
        allowed_edges: None
       ('3', '1'):
        demand: 1.0712314857300056
        allowed_edges: None
       ('2', '3'):
        demand: 1.0712314857300056
        allowed_edges: None
       ('2', '1'):
        demand: 1.0712314857300056
        allowed_edges: None
       ('1', '3'):
        demand: 1.0712314857300056
        allowed_edges: None
       ('1', '2'):
        demand: 1.0712314857300056
        allowed_edges: None
      edges:
       {('2', '3'), ('2', '1'), ('3', '1'), ('1', '3'), ('3', '2'), ('1', '2')}
        ('2', '3')
        ('2', '1')
        ('3', '1')
        ('1', '3')
        ('3', '2')
        ('1', '2')
      graph:
        empty dict
      in_edges:
       1:
        [('3', '1'), ('2', '1')]
         ('3', '1')
         ('2', '1')
       2:
        [('3', '2'), ('1', '2')]
         ('3', '2')
         ('1', '2')
       3:
        [('2', '3'), ('1', '3')]
         ('2', '3')
         ('1', '3')
      in_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      name: vnet_4
      node:
       1:
        demand: 9.837131913538425
        allowed_nodes:
         ['6', '1']
        type: t2
       2:
        demand: 9.837131913538425
        allowed_nodes:
         ['6', '1']
        type: t2
       3:
        demand: 9.837131913538425
        allowed_nodes:
         ['6', '1']
        type: t2
      nodes:
       {'3', '1', '2'}
      out_edges:
       1:
        [('1', '3'), ('1', '2')]
         ('1', '3')
         ('1', '2')
       2:
        [('2', '3'), ('2', '1')]
         ('2', '3')
         ('2', '1')
       3:
        [('3', '2'), ('3', '1')]
         ('3', '2')
         ('3', '1')
      out_neighbors:
       1:
        ['3', '2']
       2:
        ['3', '1']
       3:
        ['2', '1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
     alib.datamodel.Request @ 0x1a5c3be2400
      _shortest_paths_attribute_identifier: cost
      edge:
       ('2', '1'):
        demand: 0.417287913215613
        allowed_edges: None
       ('1', '2'):
        demand: 0.417287913215613
        allowed_edges: None
      edges:
       {('1', '2'), ('2', '1')}
        ('1', '2')
        ('2', '1')
      graph:
        empty dict
      in_edges:
       1:
        [('2', '1')]
       2:
        [('1', '2')]
      in_neighbors:
       1:
        ['2']
       2:
        ['1']
      name: vnet_5
      node:
       1:
        demand: 3.8319600412321773
        allowed_nodes:
         ['6', '1']
        type: t2
       2:
        demand: 3.8319600412321773
        allowed_nodes:
         ['6', '1']
        type: t2
      nodes:
       {'1', '2'}
      out_edges:
       1:
        [('1', '2')]
       2:
        [('2', '1')]
      out_neighbors:
       1:
        ['2']
       2:
        ['1']
      profit: 0.0
      shortest_paths_costs: None
      types:
       {'t2'}
    substrate: Substrate KK_Aarnet with following attributes: 
		Nodes{'6', '3', '5', '0', '2', '4', '1'}
		Edges{('0', '2'), ('4', '2'), ('0', '1'), ('5', '4'), ('1', '0'), ('0', '3'), ('2', '4'), ('3', '1'), ('1', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('2', '0'), ('3', '0'), ('4', '3'), ('6', '5')}

 scenarioparameter_room:
  request_generation:
   [{'exponential': {'ExponentialRequestGenerator': {'number_of_requests': [5], 'min_number_of_nodes': [2], 'max_number_of_nodes': [4], 'probability': [0.9], 'node_resource_factor': [0.5], 'edge_resource_factor': [90], 'normalize': [True]}}}]
  substrate_generation:
   [{'substrates': {'TopologyZooReader': {'topology': ['VtlWavenet2011', 'KK_Aarnet'], 'node_types': [('t1',), ('t2',)], 'node_capacity': [50.0], 'node_cost_factor': [1.0], 'edge_capacity': [50.0], 'node_type_distribution': [0.3]}}}]

